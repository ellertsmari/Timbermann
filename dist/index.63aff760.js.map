{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-e6feba3e5cda4f68.js","main.js","node_modules/rot-js/lib/index.js","node_modules/rot-js/lib/util.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/rot-js/lib/color.js","node_modules/rot-js/lib/rng.js","node_modules/rot-js/lib/text.js","node_modules/rot-js/lib/display/display.js","node_modules/rot-js/lib/display/hex.js","node_modules/rot-js/lib/display/canvas.js","node_modules/rot-js/lib/display/backend.js","node_modules/rot-js/lib/display/rect.js","node_modules/rot-js/lib/display/tile.js","node_modules/rot-js/lib/display/tile-gl.js","node_modules/rot-js/lib/display/term.js","node_modules/process/browser.js","node_modules/rot-js/lib/constants.js","node_modules/rot-js/lib/stringgenerator.js","node_modules/rot-js/lib/eventqueue.js","node_modules/rot-js/lib/MinHeap.js","node_modules/rot-js/lib/scheduler/index.js","node_modules/rot-js/lib/scheduler/simple.js","node_modules/rot-js/lib/scheduler/scheduler.js","node_modules/rot-js/lib/scheduler/speed.js","node_modules/rot-js/lib/scheduler/action.js","node_modules/rot-js/lib/fov/index.js","node_modules/rot-js/lib/fov/discrete-shadowcasting.js","node_modules/rot-js/lib/fov/fov.js","node_modules/rot-js/lib/fov/precise-shadowcasting.js","node_modules/rot-js/lib/fov/recursive-shadowcasting.js","node_modules/rot-js/lib/map/index.js","node_modules/rot-js/lib/map/arena.js","node_modules/rot-js/lib/map/map.js","node_modules/rot-js/lib/map/uniform.js","node_modules/rot-js/lib/map/dungeon.js","node_modules/rot-js/lib/map/features.js","node_modules/rot-js/lib/map/cellular.js","node_modules/rot-js/lib/map/digger.js","node_modules/rot-js/lib/map/ellermaze.js","node_modules/rot-js/lib/map/dividedmaze.js","node_modules/rot-js/lib/map/iceymaze.js","node_modules/rot-js/lib/map/rogue.js","node_modules/rot-js/lib/noise/index.js","node_modules/rot-js/lib/noise/simplex.js","node_modules/rot-js/lib/noise/noise.js","node_modules/rot-js/lib/path/index.js","node_modules/rot-js/lib/path/dijkstra.js","node_modules/rot-js/lib/path/path.js","node_modules/rot-js/lib/path/astar.js","node_modules/rot-js/lib/engine.js","node_modules/rot-js/lib/lighting.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"26170a8763aff760\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import {Display, Map, Color} from 'rot-js';\nconst tileSet = document.createElement(\"img\");\ntileSet.src = \"https://opengameart.org/sites/default/files/preview_height128_trees_mega_pack_cc_by_3_0.png\";\n \ntileSet.onload = () => {\n  console.log(\"hello\");\n   console.log(tileSet);\n  const display = new Display({\n    layout: \"tile\",\n    width: 20,\n    height: 20,\n    //fontSize: 12,\n    //fontFamily: 'monospace',\n    forceSquareRatio: true,\n    bg: \"transparent\",\n    tileWidth: 40,\n    tileHeight: 50,\n    //tileColorize: true,\n    tileSet: tileSet,\n    tileMap: {\n      '.': [130, 800],\n      '#': [515, 565],\n    }\n  });\n  //display.drawText(0, 0, \"Hello World\");\n  document.body.appendChild(display.getContainer());\n  const map = new Map.Cellular(20, 20);\n  map.randomize(0.50);\n\n  for (var i=0; i<4; i++) map.create(); \n  map.connect((x,y,wall) => {\n      //console.log(x, y,  wall ? '#' : '.')\n  \n    display.draw(x, y, wall ? '#' : '.', \"green\",  \"green\");\n    \n  \n  });\n}\n/*\nMap.prototype.getTile = function(x, y) {\n  if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n    return null;\n  }\n  return this._tiles[y][x];\n}\n\nconst map = new Map(20, 20);\nmap.randomize(0.5);\nfor (let y = 0; y < map._height; y++) {\n  for (let x = 0; x < map._width; x++) {\n    const tile = map.getTile(x, y);\n    if (tile) {\n      tile.setColor(Color.fromString('#fff'));\n    }\n  }\n}\n\nfor(let i = 0; i < 10; i++) {\n  const x = Math.floor(Math.random() * map._width);\n  const y = Math.floor(Math.random() * map._height);\n  const tile = map.getTile(x, y);\n  if (tile) {\n    tile.setColor(Color.fromString('#f00'));\n  }\n}\n\nfor(let i = 0; i < 10; i++) {\n  const x = Math.floor(Math.random() * map._width);\n  const y = Math.floor(Math.random() * map._height);\n  const tile = map.getTile(x, y);\n  if (tile) {\n    tile.setColor(Color.fromString('#0f0'));\n  }\n}\n\nfor(let i = 0; i < 10; i++) {\n  const x = Math.floor(Math.random() * map._width);\n  const y = Math.floor(Math.random() * map._height);\n  const tile = map.getTile(x, y);\n  if (tile) {\n    tile.setColor(Color.fromString('#00f'));\n  }\n}\n\nfor(let i = 0; i < 10; i++) {\n  const x = Math.floor(Math.random() * map._width);\n  const y = Math.floor(Math.random() * map._height);\n  const tile = map.getTile(x, y);\n  if (tile) {\n    tile.setColor(Color.fromString('#ff0'));\n  }\n}\n\nfor(let i = 0; i < 10; i++) {\n  const x = Math.floor(Math.random() * map._width);\n  const y = Math.floor(Math.random() * map._height);\n  const tile = map.getTile(x, y);\n  if (tile) {\n    tile.setColor(Color.fromString('#0ff'));\n  }\n}\n\nfor(let i = 0; i < 10; i++) {\n  const x = Math.floor(Math.random() * map._width);\n  const y = Math.floor(Math.random() * map._height);\n  const tile = map.getTile(x, y);\n  if (tile) {\n    tile.setColor(Color.fromString('#f0f'));\n  }\n}\n\nfor(let i = 0; i < 10; i++) {\n  const display = new rot.Display(map._width, map._height);\n  display.draw(map);\n  display.compute(map);\n  display.draw(map);\n}*/","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string || null} [fg] foreground color\n         * @param {string || null} [bg] background color\n         */\n        drawOver(x, y, ch, fg, bg) {\n            const key = `${x},${y}`;\n            const existing = this._data[key];\n            if (existing) {\n                existing[2] = ch || existing[2];\n                existing[3] = fg || existing[3];\n                existing[4] = bg || existing[4];\n            }\n            else {\n                this.draw(x, y, ch, fg, bg);\n            }\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap.js\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n"],"names":[],"version":3,"file":"index.63aff760.js.map","sourceRoot":"/__parcel_source_root/"}